// Backend API configuration
const API_BASE_URL = 'https://skillful-nature-production.up.railway.app';

// Token management
function saveToken(token) {
    localStorage.setItem('authToken', token);
}

function getToken() {
    return localStorage.getItem('authToken');
}

function removeToken() {
    localStorage.removeItem('authToken');
}

// API call helper
async function apiCall(endpoint, method = 'GET', data = null, requiresAuth = false) {
    const headers = {
        'Content-Type': 'application/json'
    };
    
    if (requiresAuth) {
        const token = getToken();
        if (token) {
            headers['Authorization'] = `Bearer ${token}`;
        }
    }
    
    const config = {
        method,
        headers
    };
    
    if (data) {
        config.body = JSON.stringify(data);
    }
    
    try {
        const response = await fetch(`${API_BASE_URL}${endpoint}`, config);
        const result = await response.json();
        
        if (!response.ok) {
            throw new Error(result.message || 'API request failed');
        }
        
        return result;
    } catch (error) {
        console.error('API Error:', error);
        throw error;
    }
}

// Login with backend integration
document.getElementById('loginForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    
    if (!email || !password) {
        alert('Please fill in all fields');
        return;
    }
    
    const loginBtn = document.querySelector('.login-btn');
    const originalText = loginBtn.textContent;
    loginBtn.textContent = 'Logging in...';
    loginBtn.disabled = true;
    
    try {
        // Call backend login API
        const response = await apiCall('/auth/signin', 'POST', {
            email: email,
            password: password
        });
        
        if (response.status && response.jwt) {
            // Save JWT token
            saveToken(response.jwt);
            
            alert(`Login successful! Welcome back.`);
            
            // Redirect to home page or dashboard
            // You can uncomment and modify this line based on your app structure
            // window.location.href = '/dashboard';
            
        } else {
            alert('Login failed: ' + (response.message || 'Invalid credentials'));
        }
        
    } catch (error) {
        console.error('Login error:', error);
        alert('Login failed: ' + error.message);
    } finally {
        loginBtn.textContent = originalText;
        loginBtn.disabled = false;
    }
});

// Send OTP for login/signup
async function sendOTP(email) {
    try {
        const response = await apiCall('/auth/sent/login-signup-otp', 'POST', {
            email: email,
            otp: '', // Will be generated by backend
            user: null
        });
        
        if (response.status) {
            alert('OTP sent to your email. Please check your inbox.');
            return true;
        } else {
            alert('Failed to send OTP: ' + (response.message || 'Unknown error'));
            return false;
        }
    } catch (error) {
        console.error('Send OTP error:', error);
        alert('Failed to send OTP: ' + error.message);
        return false;
    }
}

// Signup with OTP
async function handleSignUpWithOTP(fullName, email, otp) {
    try {
        const response = await apiCall('/auth/signup', 'POST', {
            fullName: fullName,
            email: email,
            otp: otp
        });
        
        if (response.status && response.jwt) {
            saveToken(response.jwt);
            alert(`Signup successful! Welcome ${fullName}.`);
            // Redirect or update UI as needed
            return true;
        } else {
            alert('Signup failed: ' + (response.message || 'Invalid OTP or details'));
            return false;
        }
    } catch (error) {
        console.error('Signup error:', error);
        alert('Signup failed: ' + error.message);
        return false;
    }
}

// Login with OTP
async function handleLoginWithOTP(email, otp) {
    try {
        const response = await apiCall('/auth/signin', 'POST', {
            email: email,
            password: '', // Not used for OTP login
            otp: otp
        });
        
        if (response.status && response.jwt) {
            saveToken(response.jwt);
            alert('Login successful! Welcome back.');
            return true;
        } else {
            alert('Login failed: ' + (response.message || 'Invalid OTP'));
            return false;
        }
    } catch (error) {
        console.error('OTP Login error:', error);
        alert('Login failed: ' + error.message);
        return false;
    }
}

function handleForgotPassword() {
    const email = document.getElementById('email').value;
    if (!email) {
        alert('Please enter your email address first.');
        return;
    }
    
    // Send OTP for password reset
    sendOTP(email);
}

function handleSignUp() {
    // You can customize this to show a signup form or redirect
    const fullName = prompt('Enter your full name:');
    const email = prompt('Enter your email address:');
    
    if (fullName && email) {
        sendOTP(email).then(success => {
            if (success) {
                const otp = prompt('Enter the OTP sent to your email:');
                if (otp) {
                    handleSignUpWithOTP(fullName, email, otp);
                }
            }
        });
    }
}

// Add OTP login option
function handleOTPLogin() {
    const email = document.getElementById('email').value;
    if (!email) {
        alert('Please enter your email address first.');
        return;
    }
    
    sendOTP(email).then(success => {
        if (success) {
            const otp = prompt('Enter the OTP sent to your email:');
            if (otp) {
                handleLoginWithOTP(email, otp);
            }
        }
    });
}

// Subtle animations on load
window.addEventListener('load', function() {
    const container = document.querySelector('.login-container');
    container.style.opacity = '0';
    container.style.transform = 'translateY(30px)';
    
    setTimeout(() => {
        container.style.transition = 'all 0.6s ease';
        container.style.opacity = '1';
        container.style.transform = 'translateY(0)';
    }, 100);
});
