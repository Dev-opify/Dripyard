// Check if user is already logged in
function checkAuthStatus() {
    const token = apiClient.getToken();
    if (token) {
        // User is logged in, redirect to home
        window.location.href = '../LandingPage/index.html';
    }
}

// Initialize auth check on page load
checkAuthStatus();

// Helper functions for UI feedback
function showLoading(button, loadingText) {
    button.disabled = true;
    button.dataset.originalText = button.textContent;
    button.textContent = loadingText;
}

function hideLoading(button) {
    button.disabled = false;
    button.textContent = button.dataset.originalText;
}

function showError(message) {
    const errorDiv = document.getElementById('error-message') || createErrorDiv();
    errorDiv.textContent = message;
    errorDiv.style.display = 'block';
    setTimeout(() => {
        errorDiv.style.display = 'none';
    }, 5000);
}

function createErrorDiv() {
    const errorDiv = document.createElement('div');
    errorDiv.id = 'error-message';
    errorDiv.style.cssText = `
        color: #ff4757;
        background: #ffebee;
        border: 1px solid #ff4757;
        border-radius: 4px;
        padding: 10px;
        margin: 10px 0;
        display: none;
        text-align: center;
    `;
    const form = document.getElementById('signupForm');
    form.insertBefore(errorDiv, form.firstChild);
    return errorDiv;
}

function showSuccess(message) {
    const successDiv = document.createElement('div');
    successDiv.style.cssText = `
        color: #2ed573;
        background: #f1f9ff;
        border: 1px solid #2ed573;
        border-radius: 4px;
        padding: 10px;
        margin: 10px 0;
        text-align: center;
    `;
    successDiv.textContent = message;
    const form = document.getElementById('signupForm');
    form.insertBefore(successDiv, form.firstChild);
    setTimeout(() => {
        successDiv.remove();
    }, 3000);
}

// Send OTP for signup
async function sendSignupOTP(email) {
    try {
        const response = await apiClient.auth.sendOtp({
            email: email,
            otp: '', // Will be generated by backend
            user: null
        });
        
        if (response.status) {
            return true;
        } else {
            throw new Error(response.message || 'Failed to send OTP');
        }
    } catch (error) {
        console.error('Send OTP error:', error);
        throw error;
    }
}

// Complete signup with OTP
async function completeSignup(fullName, email, otp) {
    try {
        const response = await apiClient.auth.signup({
            fullName: fullName,
            email: email,
            otp: otp
        });
        
        if (response.status && response.jwt) {
            // Save JWT token
            apiClient.setToken(response.jwt);
            return response;
        } else {
            throw new Error(response.message || 'Signup failed');
        }
    } catch (error) {
        console.error('Signup error:', error);
        throw error;
    }
}

function togglePassword(fieldId) {
    const field = document.getElementById(fieldId);
    const toggle = field.nextElementSibling;
    
    if (field.type === 'password') {
        field.type = 'text';
        toggle.textContent = 'üôà';
    } else {
        field.type = 'password';
        toggle.textContent = 'üëÅÔ∏è';
    }
}

function showTerms() {
    alert('Terms and Conditions would be displayed here.');
}

function showPrivacy() {
    alert('Privacy Policy would be displayed here.');
}

function showLogin() {
    alert('Redirecting to login page...');
}

// Global signup state
let signupState = {
    step: 1, // 1: form validation, 2: OTP verification
    userData: null
};

// Show OTP input field
function showOTPInput() {
    // Create OTP input if it doesn't exist
    let otpContainer = document.getElementById('otpContainer');
    if (!otpContainer) {
        otpContainer = document.createElement('div');
        otpContainer.id = 'otpContainer';
        otpContainer.innerHTML = `
            <div class="input-group">
                <input type="text" id="otpCode" class="form-input" placeholder="Enter OTP" maxlength="6" required>
                <label for="otpCode">OTP Code</label>
            </div>
            <button type="button" id="resendOTP" class="resend-btn">Resend OTP</button>
        `;
        
        // Insert before submit button
        const submitBtn = document.querySelector('button[type="submit"]');
        submitBtn.parentNode.insertBefore(otpContainer, submitBtn);
        
        // Add resend OTP functionality
        document.getElementById('resendOTP').addEventListener('click', async function() {
            if (signupState.userData) {
                try {
                    this.textContent = 'Sending...';
                    this.disabled = true;
                    
                    await sendSignupOTP(signupState.userData.email);
                    showSuccess('OTP resent to your email!');
                    
                } catch (error) {
                    showError('Failed to resend OTP: ' + error.message);
                } finally {
                    this.textContent = 'Resend OTP';
                    this.disabled = false;
                }
            }
        });
    }
    
    otpContainer.style.display = 'block';
    document.getElementById('otpCode').focus();
}

// Hide OTP input field
function hideOTPInput() {
    const otpContainer = document.getElementById('otpContainer');
    if (otpContainer) {
        otpContainer.style.display = 'none';
    }
}

document.getElementById('signupForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const submitBtn = this.querySelector('button[type="submit"]');
    const originalText = submitBtn.textContent;
    
    if (signupState.step === 1) {
        // Step 1: Validate form and send OTP
        const fullName = document.getElementById('fullName').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        const termsAccepted = document.getElementById('terms').checked;
    
        if (!fullName || !email || !password || !confirmPassword) {
            showError('Please fill in all fields');
            return;
        }
    
        if (password !== confirmPassword) {
            showError('Passwords do not match!');
            return;
        }
        
        if (password.length < 6) {
            showError('Password must be at least 6 characters long');
            return;
        }
    
        if (!termsAccepted) {
            showError('Please accept the Terms and Conditions');
            return;
        }
        
        // Store user data for step 2
        signupState.userData = { fullName, email, password };
        
        try {
            showLoading(submitBtn, 'Sending OTP...');
            
            await sendSignupOTP(email);
            
            showSuccess(`OTP sent to ${email}. Please check your email and enter the code below.`);
            
            // Move to step 2
            signupState.step = 2;
            showOTPInput();
            submitBtn.textContent = 'Complete Signup';
            submitBtn.disabled = false;
            
        } catch (error) {
            showError('Failed to send OTP: ' + error.message);
            hideLoading(submitBtn);
        }
        
    } else if (signupState.step === 2) {
        // Step 2: Verify OTP and complete signup
        const otpCode = document.getElementById('otpCode').value;
        
        if (!otpCode || otpCode.length < 4) {
            showError('Please enter a valid OTP code');
            return;
        }
        
        try {
            showLoading(submitBtn, 'Creating Account...');
            
            const response = await completeSignup(
                signupState.userData.fullName,
                signupState.userData.email,
                otpCode
            );
            
            showSuccess(`Account created successfully for ${signupState.userData.fullName}! Redirecting...`);
            
            // Reset form state
            signupState = { step: 1, userData: null };
            hideOTPInput();
            
            // Redirect to home page
            setTimeout(() => {
                window.location.href = '../LandingPage/index.html';
            }, 2000);
            
        } catch (error) {
            showError('Signup failed: ' + error.message);
            hideLoading(submitBtn);
        }
    }
});

// Interactive input focus effects
document.querySelectorAll('.form-input').forEach(input => {
    input.addEventListener('focus', function() {
        this.parentElement.style.transform = 'scale(1.02)';
    });
    
    input.addEventListener('blur', function() {
        this.parentElement.style.transform = 'scale(1)';
    });
});
